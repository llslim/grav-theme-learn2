{"version":3,"file":"nucleus.css","sources":["nucleus.scss","vendor/bourbon/_bourbon.scss","vendor/bourbon/settings/_prefixer.scss","vendor/bourbon/settings/_px-to-em.scss","vendor/bourbon/helpers/_convert-units.scss","vendor/bourbon/helpers/_gradient-positions-parser.scss","vendor/bourbon/helpers/_is-num.scss","vendor/bourbon/helpers/_linear-angle-parser.scss","vendor/bourbon/helpers/_linear-gradient-parser.scss","vendor/bourbon/helpers/_linear-positions-parser.scss","vendor/bourbon/helpers/_linear-side-corner-parser.scss","vendor/bourbon/helpers/_radial-arg-parser.scss","vendor/bourbon/helpers/_radial-positions-parser.scss","vendor/bourbon/helpers/_radial-gradient-parser.scss","vendor/bourbon/helpers/_render-gradients.scss","vendor/bourbon/helpers/_shape-size-stripper.scss","vendor/bourbon/helpers/_str-to-num.scss","vendor/bourbon/functions/_assign.scss","vendor/bourbon/functions/_color-lightness.scss","vendor/bourbon/functions/_flex-grid.scss","vendor/bourbon/functions/_golden-ratio.scss","vendor/bourbon/functions/_grid-width.scss","vendor/bourbon/functions/_modular-scale.scss","vendor/bourbon/functions/_px-to-em.scss","vendor/bourbon/functions/_px-to-rem.scss","vendor/bourbon/functions/_strip-units.scss","vendor/bourbon/functions/_tint-shade.scss","vendor/bourbon/functions/_transition-property-name.scss","vendor/bourbon/functions/_unpack.scss","vendor/bourbon/css3/_animation.scss","vendor/bourbon/css3/_appearance.scss","vendor/bourbon/css3/_backface-visibility.scss","vendor/bourbon/css3/_background.scss","vendor/bourbon/css3/_background-image.scss","vendor/bourbon/css3/_border-image.scss","vendor/bourbon/css3/_border-radius.scss","vendor/bourbon/css3/_box-sizing.scss","vendor/bourbon/css3/_calc.scss","vendor/bourbon/css3/_columns.scss","vendor/bourbon/css3/_filter.scss","vendor/bourbon/css3/_flex-box.scss","vendor/bourbon/css3/_font-face.scss","vendor/bourbon/css3/_hyphens.scss","vendor/bourbon/css3/_hidpi-media-query.scss","vendor/bourbon/css3/_image-rendering.scss","vendor/bourbon/css3/_keyframes.scss","vendor/bourbon/css3/_linear-gradient.scss","vendor/bourbon/css3/_perspective.scss","vendor/bourbon/css3/_radial-gradient.scss","vendor/bourbon/css3/_transform.scss","vendor/bourbon/css3/_transition.scss","vendor/bourbon/css3/_user-select.scss","vendor/bourbon/css3/_placeholder.scss","vendor/bourbon/addons/_button.scss","vendor/bourbon/addons/_clearfix.scss","vendor/bourbon/addons/_directional-values.scss","vendor/bourbon/addons/_ellipsis.scss","vendor/bourbon/addons/_font-family.scss","vendor/bourbon/addons/_hide-text.scss","vendor/bourbon/addons/_html5-input-types.scss","vendor/bourbon/addons/_position.scss","vendor/bourbon/addons/_prefixer.scss","vendor/bourbon/addons/_retina-image.scss","vendor/bourbon/addons/_size.scss","vendor/bourbon/addons/_timing-functions.scss","vendor/bourbon/addons/_triangle.scss","vendor/bourbon/addons/_word-wrap.scss","vendor/bourbon/_bourbon-deprecated-upcoming.scss","configuration/nucleus/_base.scss","configuration/nucleus/_core.scss","configuration/nucleus/_breakpoints.scss","configuration/nucleus/_layout.scss","configuration/nucleus/_typography.scss","configuration/nucleus/_nav.scss","nucleus/functions/_base.scss","nucleus/functions/_direction.scss","nucleus/functions/_range.scss","nucleus/mixins/_base.scss","nucleus/mixins/_breakpoints.scss","nucleus/mixins/_utilities.scss","nucleus/_core.scss","nucleus/_flex.scss","nucleus/_typography.scss","nucleus/_forms.scss"],"sourcesContent":["// REQUIRED DEPENDENCIES - DO NOT CHANGE\n\n// Load Third Party Libraries\n@import \"vendor/bourbon/bourbon\";\n\n// Load Nucleus Configuration\n@import \"configuration/nucleus/base\";\n\n// Load Nucleus Mixins and Functions\n@import \"nucleus/functions/base\";\n@import \"nucleus/mixins/base\";\n\n//-------------------------------------------\n\n// LOAD NUCLEUS COMPONENTS\n\n// Core\n@import \"nucleus/core\";\n\n// Flex\n@import \"nucleus/flex\";\n\n// Typography\n@import \"nucleus/typography\";\n\n// Forms\n@import \"nucleus/forms\";\n","// Settings\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n\n// Custom Helpers\n@import \"helpers/convert-units\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/is-num\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n// Custom Functions\n@import \"functions/assign\";\n@import \"functions/color-lightness\";\n@import \"functions/flex-grid\";\n@import \"functions/golden-ratio\";\n@import \"functions/grid-width\";\n@import \"functions/modular-scale\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/strip-units\";\n@import \"functions/tint-shade\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n\n// CSS3 Mixins\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/border-radius\";\n@import \"css3/box-sizing\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/hyphens\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/radial-gradient\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n@import \"css3/placeholder\";\n\n// Addons & other mixins\n@import \"addons/button\";\n@import \"addons/clearfix\";\n@import \"addons/directional-values\";\n@import \"addons/ellipsis\";\n@import \"addons/font-family\";\n@import \"addons/hide-text\";\n@import \"addons/html5-input-types\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n// Soon to be deprecated Mixins\n@import \"bourbon-deprecated-upcoming\";\n","// Variable settings for /addons/prefixer.scss\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default; // required for keyframe mixin\n","$em-base: 16px !default;\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax', 'deg', 'rad', 'grad', 'turn';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax,  1deg,  1rad,  1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n  @return $number * nth($units, $index);\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","//************************************************************************//\n// Helper for linear-gradient-parser\n//************************************************************************//\n@function _is-num($char) {\n  $values: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 0 1 2 3 4 5 6 7 8 9;\n  $index: index($values, $char);\n  @return if($index, true, false);\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: _is-num(str-slice($first-val, 0, 0));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatability\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatability\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 0, $has-multiple-vals - 1 );\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 0, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($G1, $G2, $pos, $shape-size) {\n  @each $value in $G1, $G2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $G1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $G1 {\n            $G1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $G1 {\n            $G1: null;\n          }\n\n          @else if $value == $G2 {\n            $G2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $G1, $G2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != '  ') {\n    $spec: \"#{$spec},\"\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    )\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    )\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == '-' {\n      $minus: true;\n    }\n\n    @else if $character == '.' {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list : ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}","// Programatically determines whether a color is light or dark\n// Returns a boolean\n// More details here http://robots.thoughtbot.com/closer-look-color-lightness\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1.0));\n  $-local-green: green(rgba($hex-color, 1.0));\n  $-local-blue: blue(rgba($hex-color, 1.0));\n\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > .6;\n}\n","// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n// The $fg-column, $fg-gutter and $fg-max-columns variables must be defined in your base stylesheet to properly use the flex-grid function.\n// This function takes the fluid grid equation (target / context = result) and uses columns to help define each.\n//\n// The calculation presumes that your column structure will be missing the last gutter:\n//\n//   -- column -- gutter -- column -- gutter -- column\n//\n//  $fg-column: 60px;             // Column Width\n//  $fg-gutter: 25px;             // Gutter Width\n//  $fg-max-columns: 12;          // Total Columns For Main Container\n//\n//  div {\n//    width: flex-grid(4);        // returns (315px / 995px) = 31.65829%;\n//    margin-left: flex-gutter(); // returns (25px / 995px) = 2.51256%;\n//\n//    p {\n//      width: flex-grid(2, 4);  // returns (145px / 315px) = 46.031746%;\n//      float: left;\n//      margin: flex-gutter(4);  // returns (25px / 315px) = 7.936508%;\n//    }\n//\n//    blockquote {\n//      float: left;\n//      width: flex-grid(2, 4); // returns (145px / 315px) = 46.031746%;\n//    }\n//  }","@function golden-ratio($value, $increment) {\n  @return modular-scale($value, $increment, $golden)\n}\n","@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n// The $gw-column and $gw-gutter variables must be defined in your base stylesheet to properly use the grid-width function.\n//\n//  $gw-column: 100px;         // Column Width\n//  $gw-gutter: 40px;          // Gutter Width\n//\n//  div {\n//    width: grid-width(4);    // returns 520px;\n//    margin-left: $gw-gutter; // returns 40px;\n//  }\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n@function modular-scale($value, $increment, $ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","// Srtips the units from a value. e.g. 12px -> 12\n\n@function strip-units($val) {\n  @return ($val / ($val * 0 + 1));\n}\n","// Add percentage of white to a color\n@function tint($color, $percent){\n  @return mix(white, $color, $percent);\n}\n\n// Add percentage of black to a color\n@function shade($color, $percent){\n  @return mix(black, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n\t$new-props: ();\n\t\n\t@each $prop in $props {\n\t\t$new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n\t}\n\n\t@return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n\t// put other properties that need to be prefixed here aswell\n\t@if $vendor and $prop == transform {\n\t\t@return unquote('-'+$vendor+'-'+$prop);\n\t}\n\t@else {\n\t\t@return $prop;\n\t}\n}","// Convert shorthand to the 4-value syntax\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  }\n  @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  }\n  @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  }\n  @else {\n    @return $shorthand;\n  }\n}\n\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n// Official animation shorthand property.\n@mixin animation ($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n// Individual Animation Properties\n@mixin animation-name ($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n\n@mixin animation-duration ($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n\n@mixin animation-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n\n@mixin animation-iteration-count ($values...) {\n// infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n\n@mixin animation-direction ($directions...) {\n// normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n\n@mixin animation-play-state ($states...) {\n// running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n\n@mixin animation-delay ($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n\n@mixin animation-fill-mode ($modes...) {\n// none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance ($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","//************************************************************************//\n// Backface-visibility mixin\n//************************************************************************//\n@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 0, 3);\n      $gradient-type: str-slice($background-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n        $spec-background: $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 0, 3);\n      $gradient-type: str-slice($image, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n          $spec-image: $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 0, 3);\n      $gradient-type: str-slice($border-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n        $spec-border: $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","//************************************************************************//\n// Shorthand Border-radius mixins\n//************************************************************************//\n@mixin border-top-radius($radii) {\n  @include prefixer(border-top-left-radius, $radii, spec);\n  @include prefixer(border-top-right-radius, $radii, spec);\n}\n\n@mixin border-bottom-radius($radii) {\n  @include prefixer(border-bottom-left-radius, $radii, spec);\n  @include prefixer(border-bottom-right-radius, $radii, spec);\n}\n\n@mixin border-left-radius($radii) {\n  @include prefixer(border-top-left-radius, $radii, spec);\n  @include prefixer(border-bottom-left-radius, $radii, spec);\n}\n\n@mixin border-right-radius($radii) {\n  @include prefixer(border-top-right-radius, $radii, spec);\n  @include prefixer(border-bottom-right-radius, $radii, spec);\n}\n","@mixin box-sizing ($box) {\n//  content-box | border-box | inherit\n  @include prefixer(box-sizing, $box, webkit moz spec);\n}\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}:         calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n// <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n// auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n// normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n// auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n// <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n// none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n// none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n// auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0.0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n//  flex | inline-flex\n    @if $value == \"flex\" {\n        // 2009\n        display: -webkit-box;\n        display: -moz-box;\n        display: box;\n\n        // 2012\n        display: -webkit-flex;\n        display: -moz-flex;\n        display: -ms-flexbox; // 2011 (IE 10)\n        display: flex;\n    }\n\n    @elseif $value == \"inline-flex\" {\n        display: -webkit-inline-box;\n        display: -moz-inline-box;\n        display: inline-box;\n\n        display: -webkit-inline-flex;\n        display: -moz-inline-flex;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n    }\n\n    @else {\n        display: $value;\n    }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n    // Grab flex-grow for older browsers.\n    $flex-grow: nth($value, 1);\n\n    // 2009\n    @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n    // 2011 (IE 10), 2012\n    @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)      \n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n    // Alt values.\n    $value-2009: $value;\n    $value-2011: $value;\n    $direction: \"normal\";\n\n    @if $value == row {\n        $value-2009: horizontal;\n    }\n\n    @elseif $value == \"row-reverse\" {\n        $value-2009: horizontal;\n        $direction: reverse;\n    }\n\n    @elseif $value == column {\n        $value-2009: vertical;\n    }\n\n    @elseif $value == \"column-reverse\" {\n        $value-2009: vertical;\n        $direction: reverse;\n    }\n\n    // 2009\n    @include prefixer(box-orient, $value-2009, webkit moz spec);\n    @if $direction == \"reverse\" {\n        @include prefixer(box-direction, $direction, webkit moz spec);\n    }\n\n    // 2012\n    @include prefixer(flex-direction, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == nowrap {\n        $alt-value: single;\n    }\n\n    @elseif $value == wrap {\n        $alt-value: multiple;\n    }\n\n    @elseif $value == \"wrap-reverse\" {\n        $alt-value: multiple;\n    }\n\n    @include prefixer(box-lines, $alt-value, webkit moz spec);\n    @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n    @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n    // 2009\n    @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n    // 2012\n    @include prefixer(order, $int, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n    @include prefixer(flex-grow, $number, webkit moz spec);\n    -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n    @include prefixer(flex-shrink, $number, webkit moz spec);\n    -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n    @include prefixer(flex-basis, $width, webkit moz spec);\n    -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content ($value: flex-start) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }\n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $alt-value: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $alt-value: center;\n    }\n\n    // 2009\n    @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n    // 2011 (IE 10)\n    -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n    $alt-value: $value;\n\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    // 2009\n    @include prefixer(box-align, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(align-items, $value, webkit moz ms o spec);\n    \n    // 2011 (IE 10)\n    -ms-flex-align: $alt-value;    \n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    // 2012\n    @include prefixer(align-self, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $value-2011: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $value-2011: distribute;\n    }\n\n    // 2012\n    @include prefixer(align-content, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-line-pack: $value-2011;\n}\n\n","// Order of the includes matters, and it is: normal, bold, italic, bold+italic.\n\n@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false ) {\n  @font-face {\n    font-family: $font-family;\n    font-weight: $weight;\n    font-style: $style;\n\n    @if $asset-pipeline == true {\n      src: font-url('#{$file-path}.eot');\n      src: font-url('#{$file-path}.eot?#iefix')          format('embedded-opentype'),\n           font-url('#{$file-path}.woff')                format('woff'),\n           font-url('#{$file-path}.ttf')                 format('truetype'),\n           font-url('#{$file-path}.svg##{$font-family}') format('svg');\n    } @else {\n      src: url('#{$file-path}.eot');\n      src: url('#{$file-path}.eot?#iefix')               format('embedded-opentype'),\n           url('#{$file-path}.woff')                     format('woff'),\n           url('#{$file-path}.ttf')                      format('truetype'),\n           url('#{$file-path}.svg##{$font-family}')      format('svg');\n    }\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n// none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: #{round($ratio*96)}dpi),\n  only screen and (min-resolution: #{$ratio}dppx) {\n    @content;\n  }\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n      -ms-interpolation-mode: nearest-neighbor; // IE8+\n      image-rendering: -moz-crisp-edges;\n      image-rendering: -o-crisp-edges;\n      image-rendering: -webkit-optimize-contrast;\n      image-rendering: crisp-edges;\n  }\n\n  @else {\n      image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $G1, $G2: null,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;\n     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;\n     $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Set $G1 as the default fallback color\n  $fallback-color: nth($G1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($G1,        $G2,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($G1, $G2, $pos, $shape-size);\n  $G1:  nth($data, 1);\n  $G2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $G1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, '#{$shape-size}, ', null);\n  $pos:        if($pos, '#{$pos}, ', null);\n  $pos-spec:   if($pos, 'at #{$pos}', null);\n  $shape-size-spec: if(($shape-size-spec != ' ') and ($pos == null), '#{$shape-size-spec}, ', '#{$shape-size-spec} ');\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\n}\n","@mixin transform($property: none) {\n//  none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n// x-axis - left | center | right  | length | %\n// y-axis - top  | center | bottom | length | %\n// z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style ($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition ($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n         $moz: append($moz,    $list2);\n        $spec: append($spec,   $list3);\n    }\n\n    // Create lists for non-prefixed transition properties\n    @else {\n      $webkit:  append($webkit, $list, comma);\n      $moz:     append($moz,    $list, comma);\n      $spec:    append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  }\n  @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n\n    @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property ($properties...) {\n   -webkit-transition-property: transition-property-names($properties, 'webkit');\n      -moz-transition-property: transition-property-names($properties, 'moz');\n           transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration ($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay ($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($arg: none) {\n  @include prefixer(user-select, $arg, webkit moz ms spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n}\n\n\n// Selector Style Button\n//************************************************************************//\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n\n// Simple Button\n//************************************************************************//\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n\n// Shiny Button\n//************************************************************************//\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    cursor: pointer;\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n\n// Pill Button\n//************************************************************************//\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n    background-clip: padding-box;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n\n\n// Flat Button\n//************************************************************************//\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: none;\n  color: $color;\n  display: inline-block;\n  font-size: inherit;\n  font-weight: bold;\n  padding: 7px 18px;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n","// Modern micro clearfix provides an easy way to contain floats without adding additional markup.\n//\n// Example usage:\n//\n//    // Contain all floats within .wrapper\n//    .wrapper {\n//      @include clearfix;\n//      .content,\n//      .sidebar {\n//        float : left;\n//      }\n//    }\n\n@mixin clearfix {\n  &:after {\n    content:\"\";\n    display:table;\n    clear:both;\n  }\n}\n\n// Acknowledgements\n// Beat *that* clearfix: [Thierry Koblentz](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php)\n","// directional-property mixins are shorthands\n// for writing properties like the following\n//\n// @include margin(null 0 10px);\n// ------\n// margin-right: 0;\n// margin-bottom: 10px;\n// margin-left: 0;\n//\n// - or -\n//\n// @include border-style(dotted null);\n// ------\n// border-top-style: dotted;\n// border-bottom-style: dotted;\n//\n// ------\n//\n// Note: You can also use false instead of null\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $A: nth( $vals, 1 );\n  $B: if( length($vals) < 2, $A, nth($vals, 2));\n  $C: if( length($vals) < 3, $A, nth($vals, 3));\n  $D: if( length($vals) < 2, $A, nth($vals, if( length($vals) < 4, 2, 4) ));\n\n  @if $A == 0 { $A: 0 }\n  @if $B == 0 { $B: 0 }\n  @if $C == 0 { $C: 0 }\n  @if $D == 0 { $D: 0 }\n\n  @if $A == $B and $A == $C and $A == $D { $output: $A          }\n  @else if $A == $C and $B == $D         { $output: $A $B       }\n  @else if $B == $D                      { $output: $A $B $C    }\n  @else                                  { $output: $A $B $C $D }\n\n  @return $output;\n}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    // prop: top/bottom right/left\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right/left bottom\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right bottom left\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n\n  // prop: top/right/bottom/left\n  } @else {\n    #{$all}: $vals;\n  }\n}\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n","$georgia: Georgia, Cambria, \"Times New Roman\", Times, serif;\n$helvetica: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif;\n$lucida-grande: \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif;\n$monospace: \"Bitstream Vera Sans Mono\", Consolas, Courier, monospace;\n$verdana: Verdana, Geneva, sans-serif;\n","@mixin hide-text {\n  overflow: hidden;\n\n  &:before {\n    content: \"\";\n    display: block;\n    width: 0;\n    height: 100%;\n  }\n}\n","//************************************************************************//\n// Generate a variable ($all-text-inputs) with a list of all html5\n// input types that have a text-based input, excluding textarea.\n// http://diveintohtml5.org/forms.html\n//************************************************************************//\n$inputs-list: 'input[type=\"email\"]',\n              'input[type=\"number\"]',\n              'input[type=\"password\"]',\n              'input[type=\"search\"]',\n              'input[type=\"tel\"]',\n              'input[type=\"text\"]',\n              'input[type=\"url\"]',\n\n              // Webkit & Gecko may change the display of these in the future\n              'input[type=\"color\"]',\n              'input[type=\"date\"]',\n              'input[type=\"datetime\"]',\n              'input[type=\"datetime-local\"]',\n              'input[type=\"month\"]',\n              'input[type=\"time\"]',\n              'input[type=\"week\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-text-inputs: assign-inputs($inputs-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-text-inputs-hover: assign-inputs($inputs-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-text-inputs-focus: assign-inputs($inputs-list, focus);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-text-inputs}\n// #{$all-text-inputs-hover}\n// #{$all-text-inputs-focus}\n\n// Example\n//************************************************************************//\n//   #{$all-text-inputs}, textarea {\n//     border: 1px solid red;\n//   }\n\n\n\n//************************************************************************//\n// Generate a variable ($all-button-inputs) with a list of all html5\n// input types that have a button-based input, excluding button.\n//************************************************************************//\n$inputs-button-list: 'input[type=\"button\"]',\n                     'input[type=\"reset\"]',\n                     'input[type=\"submit\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-button-inputs: assign-inputs($inputs-button-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-button-inputs-hover: assign-inputs($inputs-button-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-button-inputs-focus: assign-inputs($inputs-button-list, focus);\n\n// Active Pseudo-class\n//************************************************************************//\n$all-button-inputs-active: assign-inputs($inputs-button-list, active);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-button-inputs}\n// #{$all-button-inputs-hover}\n// #{$all-button-inputs-focus}\n// #{$all-button-inputs-active}\n\n// Example\n//************************************************************************//\n//   #{$all-button-inputs}, button {\n//     border: 1px solid red;\n//   }\n","@mixin position ($position: relative, $coordinates: null null null null) {\n\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $top: nth($coordinates, 1);\n  $right: nth($coordinates, 2);\n  $bottom: nth($coordinates, 3);\n  $left: nth($coordinates, 4);\n\n  position: $position;\n\n  @if ($top and $top == auto) or (type-of($top) == number) {\n    top: $top;\n  }\n\n  @if ($right and $right == auto) or (type-of($right) == number) {\n    right: $right;\n  }\n\n  @if ($bottom and $bottom == auto) or (type-of($bottom) == number) {\n    bottom: $bottom;\n  }\n\n  @if ($left and $left == auto) or (type-of($left) == number) {\n    left: $left;\n  }\n}\n","//************************************************************************//\n// Example: @include prefixer(border-radius, $radii, webkit ms spec);\n//************************************************************************//\n// Variables located in /settings/_prefixer.scss\n\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    }\n    @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    }\n    @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    }\n    @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    }\n    @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    }\n    @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: false) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  }\n  @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n\n  }\n}\n","@mixin size($size) {\n  $height: nth($size, 1);\n  $width: $height;\n\n  @if length($size) > 1 {\n    $height: nth($size, 2);\n  }\n\n  @if $height == auto or (type-of($height) == number and not unitless($height)) {\n    height: $height;\n  }\n\n  @if $width == auto or (type-of($height) == number and not unitless($width)) {\n    width: $width;\n  }\n}\n","// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n// Timing functions are the same as demo'ed here: http://jqueryui.com/demos/effect/easing.html\n\n// EASE IN\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n// EASE OUT\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n// EASE IN OUT\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle ($size, $color, $direction) {\n  height: 0;\n  width: 0;\n\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-bottom: $height solid $foreground-color;\n\n    } @else if $direction == right {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n\n    } @else if $direction == left {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n    }\n  }\n\n  @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == inset-up) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-down) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $foreground-color $background-color $background-color;\n  }\n\n  @else if ($direction == inset-right) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-left) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $foreground-color $background-color $background-color;\n  }\n}\n","@mixin word-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    overflow-wrap: break-word;\n    word-break: break-all;\n  }\n}\n","//************************************************************************//\n// These mixins/functions are deprecated\n// They will be removed in the next MAJOR version release\n//************************************************************************//\n@mixin inline-block {\n  display: inline-block;\n  @warn \"inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n","// Core\n@import \"core\";\n\n// Breakpoints\n@import \"breakpoints\";\n\n// Layout\n@import \"layout\";\n\n// Typography\n@import \"typography\";\n\n// Nav\n@import \"nav\";","// Border Radius\n$core-border-radius:\t\t\trem(3) !default;","// Media Device Breakpoints\n$large-desktop-container:\t\t75.000em !default;\n$desktop-container:\t\t\t\t60.000em !default;\n$tablet-container:\t\t\t\t48.000em !default;\n$large-mobile-container:\t\t30.000em !default;\n$mobile-container:\t\t\t\t100% !default;\n\n// Breakpoint Variables For Particles\n$media: \"all\" !default;\n$desktop-max: \"#{$media} and (max-width:#{$desktop-container - 0.062})\" !default;\n$mobile-only: \"#{$media} and (max-width:#{$tablet-container - 0.062})\" !default;\n$no-mobile: \"#{$media} and (min-width:#{$tablet-container})\" !default;\n$small-mobile-range: \"#{$media} and (max-width:#{$large-mobile-container})\" !default;\n$large-mobile-range: \"#{$media} and (min-width:#{$large-mobile-container + 0.063}) and (max-width:#{$tablet-container - 0.062})\" !default;\n$tablet-range: \"#{$media} and (min-width:#{$tablet-container}) and (max-width:#{$desktop-container - 0.062})\" !default;\n$desktop-range: \"#{$media} and (min-width:#{$desktop-container}) and (max-width:#{$large-desktop-container - 0.062})\" !default;\n$large-desktop-range: \"#{$media} and (min-width:#{$large-desktop-container})\" !default;\n","// Content Block Spacing Variables\n$content-margin:\t\t\t\t0.625rem !default;\n$content-padding:\t\t\t\t0.938rem !default;\n\n// Fixed Block Variables\n$fixed-block-full:\t\t\t\tpercentage(1/4) !default;\n$fixed-block-desktop:\t\t\tpercentage(1/3) !default;\n$fixed-block-tablet:\t\t\tpercentage(1/2) !default;","// Base Sizes\n$core-font-size:\t\t\t\t1.05rem !default;\n$core-line-height:\t\t\t\t1.7 !default;\n\n// Heading Sizes\n$h1-font-size:                  $core-font-size + 2.20 !default;\n$h2-font-size:                  $core-font-size + 1.50 !default;\n$h3-font-size:                  $core-font-size + 1.10 !default;\n$h4-font-size:                  $core-font-size + 0.75 !default;\n$h5-font-size:                  $core-font-size + 0.35 !default;\n$h6-font-size:                  $core-font-size - 0.15 !default;\n\n// Spacing\n$leading-margin:\t\t\t\t$core-line-height * 1rem !default;\n","// Dropdowns\n$dropdown-width:\t\t\t\t140px !default;\n$flyout-width:\t\t\t\t\t140px !default;","@import \"direction\";\n@import \"range\";","@function opposite-direction($dir) {\n\t@if $dir == 'left' {\n\t\t@return right;\n\t}\n\t@else if  $dir == 'right' {\n\t\t@return left;\n\t}\n\t@else if $dir == 'ltr' {\n\t\t@return rtl;\n\t}\n\t@else if $dir == 'rtl' {\n\t\t@return ltr;\n\t}\n\t@else if $dir == 'top' {\n\t\t@return bottom;\n\t}\n\t@else if $dir == 'bottom' {\n\t\t@return top;\n\t}\n\t@else {\n\t\t@warn \"#{$dir} is not a direction! Make sure your direction is all lowercase!\";\n\t\t@return false;\n\t}\n}\n\n@function named-direction($dir) {\n\t@if $dir == 'ltr' {\n\t\t@return left;\n\t}\n\t@else if $dir == 'rtl' {\n\t\t@return right;\n\t}\n\t@else {\n\t\t@warn \"#{$dir} is not a valid HTML direction! Make sure you are using a valid HTML direction\";\n\t\t@return false;\n\t}\n}","@function lower-bound($range){\n\t@if length($range) <= 0 {\n\t\t@return 0;\n\t}\n\t@return nth($range,1);\n}\n\n@function upper-bound($range) {\n\t@if length($range) < 2 {\n\t\t@return 999999999999;\n\t}\n\t@return nth($range, 2);\n}","@import \"breakpoints\";\n@import \"utilities\";","// Breakpoints\n@mixin breakpoint($breakpoint, $media: all) {\n\t@if $breakpoint == large-desktop-range {\n\t\t@media only #{$media} and (min-width: $large-desktop-container) { @content; }\n\t}\n\t@else if $breakpoint == desktop-range {\n\t\t@media only #{$media} and (min-width: $desktop-container) and (max-width: $large-desktop-container - 0.062) { @content; }\n\t}\n\t@else if $breakpoint == tablet-range {\n\t\t@media only #{$media} and (min-width: $tablet-container) and (max-width: $desktop-container - 0.062) { @content; }\n\t}\n\t@else if $breakpoint == large-mobile-range {\n\t\t@media only #{$media} and (min-width: $large-mobile-container + 0.063) and (max-width: $tablet-container - 0.062) { @content; }\n\t}\n\t@else if $breakpoint == small-mobile-range {\n\t\t@media only #{$media} and (max-width: $large-mobile-container) { @content; }\n\t}\n\t@else if $breakpoint == no-mobile {\n\t\t@media only #{$media} and (min-width: $tablet-container) { @content; }\n\t}\n\t@else if $breakpoint == mobile-only {\n\t\t@media only #{$media} and (max-width: $tablet-container - 0.062) { @content; }\n\t}\n\t@else if $breakpoint == desktop-only {\n\t\t@media only #{$media} and (max-width: $desktop-container - 0.062) { @content; }\n\t}\n}\n","\n\n// List Reset\n%list-reset {\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n}\n\n// Vertical Centering\n%vertical-align {\n\tposition: relative;\n\ttop: 50%;\n\t-webkit-transform: translateY(-50%);\n\t-moz-transform: translateY(-50%);\n\t-o-transform: translateY(-50%);\n\t-ms-transform: translateY(-50%);\n\ttransform: translateY(-50%);\n}\n\n// Columns\n@mixin columns($columns) {\n\twidth: percentage(1/$columns);\n}\n\n// Float with margin variable\n@mixin float($direction, $margin: 0) {\n\tfloat: $direction;\n\tmargin-#{opposite-direction($direction)}: $margin;\n}\n\n","*, *::before, *::after {\n\t@include box-sizing(border-box);\n}\n\n@-webkit-viewport{width:device-width}\n@-moz-viewport{width:device-width}\n@-ms-viewport{width:device-width}\n@-o-viewport{width:device-width}\n@viewport{width:device-width}\n\nhtml {\n\tfont-size: 100%;\n\t-ms-text-size-adjust: 100%;\n\t-webkit-text-size-adjust: 100%;\n}\n\nbody {\n\tmargin: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nnav,\nsection,\nsummary {\n\tdisplay: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n\tdisplay: inline-block;\n\tvertical-align: baseline;\n}\n\naudio:not([controls]) {\n\tdisplay: none;\n\theight: 0;\n}\n\n[hidden],\ntemplate {\n\tdisplay: none;\n}\n\na {\n\tbackground: transparent;\n\ttext-decoration: none;\n}\n\na:active,\na:hover {\n\toutline: 0;\n}\n\nabbr[title] {\n\tborder-bottom: 1px dotted;\n}\n\nb,\nstrong {\n\tfont-weight: bold;\n}\n\ndfn {\n\tfont-style: italic;\n}\n\nmark {\n\tbackground: #FFFF27;\n\tcolor: #333;\n}\n\nsub,\nsup {\n\tfont-size: $core-font-size - 0.250;\n\tline-height: 0;\n\tposition: relative;\n\tvertical-align: baseline;\n}\n\nsup {\n\ttop: -0.5em;\n}\n\nsub {\n\tbottom: -0.25em;\n}\n\nimg {\n\tborder: 0;\n\tmax-width: 100%;\n}\n\nsvg:not(:root) {\n\toverflow: hidden;\n}\n\nfigure {\n\tmargin: 1em 40px;\n}\n\nhr {\n\theight: 0;\n}\n\npre {\n\toverflow: auto;\n}\n\ncode,\nkbd,\npre,\nsamp {\n\t// font-size: $core-font-size;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n\tcolor: inherit;\n\tfont: inherit;\n\tmargin: 0;\n}\n\nbutton {\n\toverflow: visible;\n}\n\nbutton,\nselect {\n\ttext-transform: none;\n}\n\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n\t-webkit-appearance: button;\n\tcursor: pointer;\n}\n\nbutton[disabled],\nhtml input[disabled] {\n\tcursor: default;\n}\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n\tborder: 0;\n\tpadding: 0;\n}\n\ninput {\n\tline-height: normal;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n\tpadding: 0;\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n\theight: auto;\n}\n\ninput[type=\"search\"] {\n\t-webkit-appearance: textfield;\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n\t-webkit-appearance: none;\n}\n\nlegend {\n\tborder: 0;\n\tpadding: 0;\n}\n\ntextarea {\n\toverflow: auto;\n}\n\noptgroup {\n\tfont-weight: bold;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n\ttable-layout: fixed;\n\twidth: 100%;\n}\n\ntr, td, th {\n\tvertical-align: middle;\n}\n\nth, td {\n\tpadding: ($leading-margin / 4) 0;\n}\n\nth {\n\ttext-align: left;\n}\n","// Page Container\n.container {\n\twidth: $large-desktop-container;\n\tmargin: 0 auto;\n\tpadding: 0;\n\t@include breakpoint(desktop-range) {\n\t\twidth: $desktop-container;\n\t}\n\t@include breakpoint(tablet-range) {\n\t\twidth: $tablet-container;\n\t}\n\t@include breakpoint(large-mobile-range) {\n\t\twidth: $large-mobile-container;\n\t}\n\t@include breakpoint(small-mobile-range) {\n\t\twidth: $mobile-container;\n\t}\n}\n\n// Grid Row and Column Setup\n.grid {\n\t@include display(flex);\n\t@include flex-flow(row);\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\t@include breakpoint(mobile-only) {\n\t\t@include flex-flow(row wrap);\n\t}\n}\n\n.block {\n\t@include flex(1);\n    min-width: 0;\n    min-height: 0;\n\t@include breakpoint(mobile-only) {\n\t\t@include flex(0 100%);\n\t}\n}\n\n// Content Block Spacing\n.content {\n\tmargin: $content-margin;\n\tpadding: $content-padding;\n}\n\nbody [class*=\"size-\"] {\n\t@include breakpoint(mobile-only) {\n\t\t@include flex(0 100%);\n\t}\n}\n\n// Custom Size Modifiers\n.size-1-2 {\n\t@include flex(0 percentage(1/2));\n}\n\n.size-1-3 {\n\t@include flex(0 percentage(1/3));\n}\n\n.size-1-4 {\n\t@include flex(0 percentage(1/4));\n}\n\n.size-1-5 {\n\t@include flex(0 percentage(1/5));\n}\n\n.size-1-6 {\n\t@include flex(0 percentage(1/6));\n}\n\n.size-1-7 {\n\t@include flex(0 percentage(1/7));\n}\n\n.size-1-8 {\n\t@include flex(0 percentage(1/8));\n}\n\n.size-1-9 {\n\t@include flex(0 percentage(1/9));\n}\n\n.size-1-10 {\n\t@include flex(0 percentage(1/10));\n}\n\n.size-1-11 {\n\t@include flex(0 percentage(1/11));\n}\n\n.size-1-12 {\n\t@include flex(0 percentage(1/12));\n}\n\n@include breakpoint(tablet-range) {\n\t.size-tablet-1-2 {\n\t\t@include flex(0 percentage(1/2));\n\t}\n\n\t.size-tablet-1-3 {\n\t\t@include flex(0 percentage(1/3));\n\t}\n\n\t.size-tablet-1-4 {\n\t\t@include flex(0 percentage(1/4));\n\t}\n\n\t.size-tablet-1-5 {\n\t\t@include flex(0 percentage(1/5));\n\t}\n\n\t.size-tablet-1-6 {\n\t\t@include flex(0 percentage(1/6));\n\t}\n\n\t.size-tablet-1-7 {\n\t\t@include flex(0 percentage(1/7));\n\t}\n\n\t.size-tablet-1-8 {\n\t\t@include flex(0 percentage(1/8));\n\t}\n\n\t.size-tablet-1-9 {\n\t\t@include flex(0 percentage(1/9));\n\t}\n\n\t.size-tablet-1-10 {\n\t\t@include flex(0 percentage(1/10));\n\t}\n\n\t.size-tablet-1-11 {\n\t\t@include flex(0 percentage(1/11));\n\t}\n\n\t.size-tablet-1-12 {\n\t\t@include flex(0 percentage(1/12));\n\t}\n}\n\n// Fix for Firefox versions 27 and below\n@include breakpoint(mobile-only) {\n\t@supports not (flex-wrap: wrap) {\n\t\t.grid {\n\t\t\tdisplay: block;\n\t\t\t@include flex-wrap(inherit);\n\t\t}\n\t\t.block {\n\t\t\tdisplay: block;\n\t\t\t@include flex(inherit);\n\t\t}\n\t}\n}\n\n// Reordering\n.first-block {\n  -webkit-box-ordinal-group: 0;\n  -webkit-order: -1;\n  -ms-flex-order: -1;\n  order: -1;\n}\n\n.last-block {\n  -webkit-box-ordinal-group: 2;\n  -webkit-order: 1;\n  -ms-flex-order: 1;\n  order: 1;\n}\n\n// Fixed Grid Style\n.fixed-blocks {\n\t@include flex-flow(row wrap);\n\t.block {\n\t\t@include flex(inherit);\n\t\twidth: $fixed-block-full;\n\t\t@include breakpoint(desktop-range) {\n\t\t\twidth: $fixed-block-desktop;\n\t\t}\n\t\t@include breakpoint(tablet-range) {\n\t\t\twidth: $fixed-block-tablet;\n\t\t}\n\t\t@include breakpoint(mobile-only) {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n}\n","// Body Base\nbody {\n\tfont-size: $core-font-size;\n\tline-height: $core-line-height;\n}\n\n// Headings\nh1, h2, h3, h4, h5, h6 {\n\tmargin: $leading-margin / 2 0 $leading-margin 0;\n\ttext-rendering: optimizeLegibility;\n}\n\nh1 {\n\tfont-size: $h1-font-size;\n}\n\nh2 {\n\tfont-size: $h2-font-size;\n}\n\nh3 {\n\tfont-size: $h3-font-size;\n}\n\nh4 {\n\tfont-size: $h4-font-size;\n}\n\nh5 {\n\tfont-size: $h5-font-size;\n}\n\nh6 {\n\tfont-size: $h6-font-size;\n}\n\n// Paragraph\np {\n\tmargin: $leading-margin 0;\n}\n\n// Lists\nul, ol {\n\tmargin-top: $leading-margin;\n\tmargin-bottom: $leading-margin;\n\tul, ol {\n\t\tmargin-top: 0;\n\t\tmargin-bottom: 0;\n\t}\n}\n\n// Blockquote\nblockquote {\n\tmargin: $leading-margin 0;\n\tpadding-left: $leading-margin / 2;\n}\n\ncite {\n\tdisplay: block;\n\tfont-size: $core-font-size - 0.125;\n\t&:before {\n      content: \"\\2014 \\0020\";\n    }\n}\n\n// Inline and Code\npre {\n\tmargin: $leading-margin 0;\n \tpadding: $content-padding;\n}\n\ncode {\n\tvertical-align: bottom;\n}\n\n// Extras\nsmall {\n\tfont-size: $core-font-size - 0.125;\n}\n\nhr {\n\tborder-left: none;\n\tborder-right: none;\n\tborder-top: none;\n\tmargin: $leading-margin 0;\n}\n","fieldset {\n\tborder: 0;\n\tpadding: $content-padding;\n\tmargin: 0 0 $leading-margin 0;\n}\n\ninput,\nlabel,\nselect {\n\tdisplay: block;\n}\n\nlabel {\n\tmargin-bottom: $leading-margin / 4;\n\n\t&.required:after {\n\t\tcontent: \"*\";\n\t}\n\n\tabbr {\n\t\tdisplay: none;\n\t}\n}\n\ntextarea, #{$all-text-inputs}, select[multiple=multiple] {\n\t@include transition(border-color);\n\tborder-radius: $core-border-radius;\n\tmargin-bottom: $leading-margin / 2;\n\tpadding: ($leading-margin / 4) ($leading-margin / 4);\n\twidth: 100%;\n\n\t&:focus {\n\t\toutline: none;\n\t}\n}\n\ntextarea {\n\tresize: vertical;\n}\n\ninput[type=\"checkbox\"], input[type=\"radio\"] {\n\tdisplay: inline;\n\tmargin-right: $leading-margin / 4;\n}\n\ninput[type=\"file\"] {\n\twidth: 100%;\n}\n\nselect {\n\twidth: auto;\n\tmax-width: 100%;\n\tmargin-bottom: $leading-margin;\n}\n\nbutton,\ninput[type=\"submit\"] {\n\tcursor: pointer;\n\tuser-select: none;\n\tvertical-align: middle;\n\twhite-space: nowrap;\n\tborder: inherit;\n}"],"mappings":"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","names":[]}